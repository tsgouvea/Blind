function sma = stateMatrix()
global BpodSystem
global TaskParameters
%% Define ports
LeftPort = floor(mod(TaskParameters.GUI.Ports_LMR/100,10));
CenterPort = floor(mod(TaskParameters.GUI.Ports_LMR/10,10));
RightPort = mod(TaskParameters.GUI.Ports_LMR,10);
LeftPortOut = strcat('Port',num2str(LeftPort),'Out');
CenterPortOut = strcat('Port',num2str(CenterPort),'Out');
RightPortOut = strcat('Port',num2str(RightPort),'Out');
LeftPortIn = strcat('Port',num2str(LeftPort),'In');
CenterPortIn = strcat('Port',num2str(CenterPort),'In');
RightPortIn = strcat('Port',num2str(RightPort),'In');

LeftValve = 2^(LeftPort-1);
RightValve = 2^(RightPort-1);

LeftValveTime  = GetValveTimes(TaskParameters.GUI.rewardAmount, LeftPort);
RightValveTime  = GetValveTimes(TaskParameters.GUI.rewardAmount, RightPort);

if BpodSystem.Data.Custom.BaitedL(end)
    LeftPokeAction = 'rewarded_Lin';
    RightPokeAction = 'unrewarded_Rin';
else
    LeftPokeAction = 'unrewarded_Lin';
    RightPokeAction = 'rewarded_Rin';
end

iti_timer = TaskParameters.GUI.ITI;
if TaskParameters.GUI.VI
    iti_timer = exprnd(iti_timer);
end

%%
sma = NewStateMatrix();
sma = SetGlobalTimer(sma,1,TaskParameters.GUI.FeedbackDelay);
sma = SetGlobalTimer(sma,2,iti_timer);

%% Trial Initiation
sma = AddState(sma, 'Name', 'state_0',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup', 'wait_Cin'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'wait_Cin',...
    'Timer', 0,...
    'StateChangeConditions', {CenterPortIn, 'Cin_fixate'},...
    'OutputActions', {strcat('PWM',num2str(CenterPort)),255});
sma = AddState(sma, 'Name', 'Cin_fixate',...
    'Timer', TaskParameters.GUI.FixTimeMin,...
    'StateChangeConditions', {CenterPortOut,'BrokeFix','Tup','Cin_early'},...
    'OutputActions', {});
if TaskParameters.GUI.LoopbackFix
    smaChange = {'Tup','wait_Cin'};
    smaOut = {};
else
    smaChange = {'Tup','exit'};
    smaOut = {'SoftCode',1};
end
sma = AddState(sma, 'Name', 'BrokeFix',...
    'Timer', TaskParameters.GUI.BreakFixPenalty,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);
sma = AddState(sma, 'Name', 'Cin_early',...
    'Timer', TaskParameters.GUI.StimDelay,...
    'StateChangeConditions', {CenterPortOut, 'wait_Sin_early','Tup','Cin_late'},...
    'OutputActions', {});

%% Early trials
sma = AddState(sma, 'Name', 'wait_Sin_early',...
    'Timer',TaskParameters.GUI.ChoiceDeadline,...
    'StateChangeConditions', {LeftPortIn,'start_Lin_early',RightPortIn,'start_Rin_early','Tup','choice_miss'},...
    'OutputActions',{strcat('PWM',num2str(LeftPort)),255,strcat('PWM',num2str(RightPort)),255});
sma = AddState(sma,'Name', 'start_Lin_early',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Lin_early'},...
    'OutputActions',{'GlobalTimerTrig',1});
sma = AddState(sma,'Name', 'start_Rin_early',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Rin_early'},...
    'OutputActions',{'GlobalTimerTrig',1});

smaTimer = TaskParameters.GUI.FeedbackDelay;
smaOut = {};
switch LeftPokeAction
    case 'rewarded_Lin'
            smaChange = {LeftPortOut,'Lin_grace_early','GlobalTimer1_End','Lin_rewardDelay_early','Tup','Lin_rewardDelay_early'};
    case 'unrewarded_Lin'
            smaChange = {LeftPortOut,'Lin_grace_early','GlobalTimer1_End','Lin_fictR','Tup','Lin_fictR'};
end
sma = AddState(sma, 'Name', 'Lin_early',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);
switch RightPokeAction
    case 'rewarded_Rin'
            smaChange = {RightPortOut, 'Rin_grace_early','GlobalTimer1_End','Rin_rewardDelay_early','Tup','Rin_rewardDelay_early'};
    case 'unrewarded_Rin'
            smaChange = {RightPortOut, 'Rin_grace_early','GlobalTimer1_End','Rin_fictL','Tup','Rin_fictL'};
end
sma = AddState(sma, 'Name', 'Rin_early',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);

sma = AddState(sma, 'Name','Lin_grace_early',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {LeftPortIn,'Lin_early','Tup', 'EarlySout','GlobalTimer1_End','EarlySout'},...
    'OutputActions', {});
sma = AddState(sma, 'Name','Rin_grace_early',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {RightPortIn,'Rin_early','Tup', 'EarlySout','GlobalTimer1_End','EarlySout'},...
    'OutputActions', {});

smaTimer = TaskParameters.GUI.RewardDelay;
smaOut = {'BNCState',TaskParameters.GUI.BNCout};
sma = AddState(sma, 'Name','Lin_rewardDelay_early',...
    'Timer', smaTimer,...
    'StateChangeConditions',  {'Tup','water_L'},...
    'OutputActions', smaOut);
sma = AddState(sma, 'Name','Rin_rewardDelay_early',...
    'Timer', smaTimer,...
    'StateChangeConditions',  {'Tup','water_R'},...
    'OutputActions', smaOut);
smaChange = {'Tup','ITI'};
sma = AddState(sma, 'Name','Lin_fictR',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);
sma = AddState(sma, 'Name','Rin_fictL',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);

%% Late Trials

sma = AddState(sma, 'Name','Cin_late',...
    'Timer', 0,...
    'StateChangeConditions', {CenterPortOut, 'wait_Sin_late'},...
    'OutputActions', {'BNCState',TaskParameters.GUI.BNCout});

sma = AddState(sma, 'Name', 'wait_Sin_late',...
    'Timer',TaskParameters.GUI.ChoiceDeadline,...
    'StateChangeConditions', {LeftPortIn,'start_Lin_late',RightPortIn,'start_Rin_late','Tup','choice_miss'},...
    'OutputActions',{strcat('PWM',num2str(LeftPort)),255,strcat('PWM',num2str(RightPort)),255});
sma = AddState(sma,'Name', 'start_Lin_late',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Lin_late'},...
    'OutputActions',{'GlobalTimerTrig',1});
sma = AddState(sma,'Name', 'start_Rin_late',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Rin_late'},...
    'OutputActions',{'GlobalTimerTrig',1});

smaTimer = TaskParameters.GUI.FeedbackDelay;
smaOut = {};
switch LeftPokeAction
    case 'rewarded_Lin'
            smaChange = {LeftPortOut,'Lin_grace_late','GlobalTimer1_End','Lin_rewardDelay_late','Tup','Lin_rewardDelay_late'};
    case 'unrewarded_Lin'
            smaChange = {LeftPortOut,'Lin_grace_late','GlobalTimer1_End','Lin_incorrect','Tup','Lin_incorrect'};
end
sma = AddState(sma, 'Name', 'Lin_late',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);
switch RightPokeAction
    case 'rewarded_Rin'
            smaChange = {RightPortOut, 'Rin_grace_late','GlobalTimer1_End','Rin_rewardDelay_late','Tup','Rin_rewardDelay_late'};
    case 'unrewarded_Rin'
            smaChange = {RightPortOut, 'Rin_grace_late','GlobalTimer1_End','Rin_incorrect','Tup','Rin_incorrect'};
end
sma = AddState(sma, 'Name', 'Rin_late',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);

sma = AddState(sma, 'Name','Lin_grace_late',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {LeftPortIn,'Lin_late','Tup', 'EarlySout','GlobalTimer1_End','EarlySout'},...
    'OutputActions', {});
sma = AddState(sma, 'Name','Rin_grace_late',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {RightPortIn,'Rin_late','Tup', 'EarlySout','GlobalTimer1_End','EarlySout'},...
    'OutputActions', {});

sma = AddState(sma, 'Name','Lin_rewardDelay_late',...
    'Timer', 0,...
    'StateChangeConditions',  {'Tup','water_L'},...
    'OutputActions', {});
sma = AddState(sma, 'Name','Rin_rewardDelay_late',...
    'Timer', 0,...
    'StateChangeConditions',  {'Tup','water_R'},...
    'OutputActions', {});
smaChange = {'Tup','ITI'};
sma = AddState(sma, 'Name','Lin_incorrect',...
    'Timer', 0,...
    'StateChangeConditions', smaChange,...
    'OutputActions', {});
sma = AddState(sma, 'Name','Rin_incorrect',...
    'Timer', 0,...
    'StateChangeConditions', smaChange,...
    'OutputActions', {});

%% Trial ending

sma = AddState(sma, 'Name', 'water_L',...
    'Timer', LeftValveTime,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {'ValveState', LeftValve});
sma = AddState(sma, 'Name', 'water_R',...
    'Timer', RightValveTime,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {'ValveState', RightValve});
sma = AddState(sma, 'Name', 'EarlySout',...
    'Timer', TaskParameters.GUI.EarlySoutPenalty,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'choice_miss',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'ITI',...
    'smaTimer',iti_timer,...
    'StateChangeConditions',{'Tup','exit'},...
    'OutputActions',{});

end
